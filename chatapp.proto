syntax = "proto3";

service Chat {
  // Send updated versions of the message queue and user list to the other servers
  rpc ReceiveServerMarketData(ServerMarketData) returns (ServerResponse) {}
  rpc ReceiveServerClientData(ServerClientData) returns (ServerResponse) {}
  rpc ReceiveClientMarketData(ClientMarketData) returns (ServerResponse) {}

  // Send heartbeat to other servers to indicate activity
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse) {}

  // Generate server response to user order
  rpc RequestClientOrder (ClientOrder) returns (Response) {}
  // Send messages between clients
  rpc SendClientMessages (Username) returns (stream Response) {}

  // Query for the current leader server
  rpc FindLeader (LeaderRequest) returns (LeaderResponse) {}
}

// Order sent by user to server
message ClientOrder {
  string opcode = 1;
  string username = 2;
  string password = 3;
  string symbol = 4;
  string dir = 5;
  float price = 6;
  int32 size = 7;
}

message ServerMarketData {
  string open_orders = 1;
  string order_book = 2;
  string positions = 3;
  string messages = 4;
}

// The current message queue and the list of users
message ServerClientData {
  string user_status = 1;
  string passwords = 2;
}

message ClientMarketData {
  string order_book = 1;
}

// Response message to user
message ServerResponse {
}

// Heartbeat request
message HeartbeatRequest {
}

// Heartbeat response
message HeartbeatResponse {
  int32 leader = 1;
}

message Response {
  string response = 1;
}

message Username {
  string username = 1;
}

message LeaderRequest {
}

message LeaderResponse {
  int32 leader = 1;
}
