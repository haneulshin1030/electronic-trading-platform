syntax = "proto3";

service Chat {
  // Send updated versions of the message queue and user list to the other servers
  rpc Send(Data) returns (UserResponse) {}
  // Send heartbeat to other servers to indicate activity
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse) {}

  // Generate server response to user request
  rpc ServerResponse (Request) returns (Response) {}
  // Send messages between clients
  rpc ClientMessages (Username) returns (stream Response) {}

  // Query for the current leader server
  rpc Leader (LeaderRequest) returns (LeaderResponse) {}
}

// Request made by user to the server
message Request {
  string opcode = 1;
  string username = 2;
  string recipient = 3;
  string message = 4;
  string regex = 5;
}

// The current message queue and the list of users
message Data {
  string csv = 1;
  string user_list = 2;
}

// Response message to user
message UserResponse {
}

// Heartbeat request
message HeartbeatRequest {
}

// Heartbeat response
message HeartbeatResponse {
  int32 leader = 1;
}

message Response {
  string response = 1;
}

message Username {
  string username = 1;
}

message LeaderRequest {
}

message LeaderResponse {
  int32 leader = 1;
}